

services:
  ups-kafka-broker:
    image: apache/kafka:3.9.1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ups-kafka-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@ups-kafka-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - usp-kafka-broker-vol:/var/lib/kafka
    ports:
      - "9093:9093"
      - "9092:9092"
    networks:
      - local-network


  ups-pg-db:
    image: postgres:15
    environment:
      POSTGRES_DB: ups-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - usp-pg-db-vol:/var/lib/postgresql/data
    ports:
      - "9876:5432"
    networks:
      - local-network

  ups-redis-db:
    image: redis:7
    volumes:
      - usp-redis-db-vol:/data
    ports:
      - "6379:6379"
    networks:
      - local-network

  ups-influxdb:
    image: influxdb:2.7
    container_name: ups-influxdb
    ports:
      - "8086:8086"
    volumes:
      - ups-influx-db-vol:/var/lib/influxdb2
      - ups-influx-db-config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_RETENTION=730d
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    networks:
      - local-network

  ups-aggregator-service:
    build:
      context: ./backend
      dockerfile: Dockerfile-aggregate
    environment:
      - AGG_KAFKA_SEEDS=${AGG_KAFKA_SEEDS}
      - AGG_TOPIC_KILLS=${AGG_TOPIC_KILLS}
      - AGG_PORT=${AGG_PORT}
    ports:
      - "${AGG_PORT}:${AGG_PORT}"
    networks:
      - local-network

  ups-process-kill-service:
    build:
      context: ./backend
      dockerfile: Dockerfile-process-kill
    environment:
      - PRO_KILLS_KAFKA_SEEDS=${PRO_KILLS_KAFKA_SEEDS}
      - PRO_KILLS_KAFKA_GROUP=${PRO_KILLS_KAFKA_GROUP}
      - PRO_KILLS_TOPIC_KILLS=${PRO_KILLS_TOPIC_KILLS}
      - PRO_KILLS_KAFKA_ID=${PRO_KILLS_KAFKA_ID}
      - PRO_KILLS_REDIS_ADDR=${PRO_KILLS_REDIS_ADDR}
      - PRO_KILLS_REDIS_PORT=${PRO_KILLS_REDIS_PORT}
      - PRO_KILLS_REDIS_DB_NUMBER=${PRO_KILLS_REDIS_DB_NUMBER}
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - INFLUXDB_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    networks:
      - local-network

networks:
  local-network:

volumes:
  usp-kafka-broker-vol:
  usp-pg-db-vol:
  usp-redis-db-vol:
  ups-influx-db-vol:
  ups-influx-db-config: